' Este módulo contém as seguintes funções personalizadas:
' 
' 1. DifPercentual: Calcula a diferença percentual entre dois valores.
' 2. ContarOcorrencias: Conta ocorrências de um valor em múltiplos intervalos.
' 3. NEsimoMaior: Encontra o N-ésimo maior valor em um intervalo.
' 4. BubbleSort: Função auxiliar para ordenar um array (não usada diretamente).
' 5. TextoParaNumero: Converte texto em número de forma personalizada.
' 6. MediaPonderada: Calcula a média ponderada de um conjunto de valores.
' 7. Mediana: Encontra a mediana de um intervalo.
' 8. ConcatenarIntervalos: Concatena intervalos de células com um separador.
' 9. RemoverEspacosExtras: Remove espaços extras de um texto.
' 10. ContarPalavras: Conta o número de palavras em uma célula de texto.
' 11. ContemTexto: Verifica se uma célula contém texto.
' 12. UltimaOcorrencia: Encontra a última ocorrência de um valor em um intervalo.
' 13. ValorFuturo: Calcula o valor futuro com base em juros compostos.
' 14. SomaValoresUnicos: Soma todos os valores únicos em um intervalo.

' Função para calcular a diferença percentual entre dois valores
Function DifPercentual(valor1 As Double, valor2 As Double) As Double
    If valor1 = 0 Then
        DifPercentual = 0
    Else
        DifPercentual = (valor2 - valor1) / Abs(valor1)
    End If
End Function

' Função para contar ocorrências em múltiplos intervalos
Function ContarOcorrencias(rng1 As Range, rng2 As Range, valor As Variant) As Long
    ContarOcorrencias = Application.WorksheetFunction.CountIf(rng1, valor) + Application.WorksheetFunction.CountIf(rng2, valor)
End Function

' Função para encontrar o N-ésimo maior valor
Function NEsimoMaior(rng As Range, n As Integer) As Double
    Dim valores() As Double
    Dim i As Integer
    
    ReDim valores(1 To rng.Count)
    i = 1
    For Each celula In rng
        valores(i) = celula.Value
        i = i + 1
    Next celula
    
    Call BubbleSort(valores)
    
    NEsimoMaior = valores(UBound(valores) - n + 1)
End Function

' Função auxiliar para ordenar o array (Bubble Sort)
Private Sub BubbleSort(arr() As Double)
    Dim i As Integer, j As Integer
    Dim temp As Double
    
    For i = LBound(arr) To UBound(arr) - 1
        For j = i + 1 To UBound(arr)
            If arr(i) < arr(j) Then
                temp = arr(i)
                arr(i) = arr(j)
                arr(j) = temp
            End If
        Next j
    Next i
End Sub

' Função para converter texto em número de forma personalizada
Function TextoParaNumero(texto As String, divisor As Double) As Double
    TextoParaNumero = Val(texto) / divisor
End Function

' Função para calcular a média ponderada
Function MediaPonderada(valores As Range, pesos As Range) As Double
    Dim somaPonderada As Double
    Dim somaPesos As Double
    Dim i As Integer
    
    For i = 1 To valores.Count
        somaPonderada = somaPonderada + (valores.Cells(i, 1).Value * pesos.Cells(i, 1).Value)
        somaPesos = somaPesos + pesos.Cells(i, 1).Value
    Next i
    
    If somaPesos <> 0 Then
        MediaPonderada = somaPonderada / somaPesos
    Else
        MediaPonderada = 0
    End If
End Function

' Função para encontrar a mediana de um intervalo
Function Mediana(rng As Range) As Double
    Dim valores() As Double
    Dim i As Integer

    ReDim valores(1 To rng.Count)
    i = 1
    For Each celula In rng
        valores(i) = celula.Value
        i = i + 1
    Next celula

    Call BubbleSort(valores)

    If UBound(valores) Mod 2 = 1 Then
        Mediana = valores((UBound(valores) + 1) \ 2)
    Else
        Mediana = (valores(UBound(valores) \ 2) + valores((UBound(valores) \ 2) + 1)) / 2
    End If
End Function

' Função para concatenar intervalos de células com separador
Function ConcatenarIntervalos(rng As Range, separador As String) As String
    Dim celula As Range
    Dim resultado As String

    resultado = ""
    For Each celula In rng
        If resultado = "" Then
            resultado = celula.Value
        Else
            resultado = resultado & separador & celula.Value
        End If
    Next celula

    ConcatenarIntervalos = resultado
End Function

' Função para remover espaços extras de texto
Function RemoverEspacosExtras(texto As String) As String
    Dim resultado As String
    resultado = WorksheetFunction.Trim(texto)
    RemoverEspacosExtras = resultado
End Function

' Função para contar palavras em uma célula
Function ContarPalavras(texto As String) As Long
    Dim palavras() As String
    palavras = Split(texto, " ")
    ContarPalavras = UBound(palavras) + 1
End Function

' Função para verificar se uma célula contém texto
Function ContemTexto(celula As Range) As Boolean
    ContemTexto = Application.WorksheetFunction.IsText(celula.Value)
End Function

' Função para encontrar a última ocorrência de um valor em um intervalo
Function UltimaOcorrencia(rng As Range, valor As Variant) As Variant
    Dim i As Long
    
    For i = rng.Cells.Count To 1 Step -1
        If rng.Cells(i).Value = valor Then
            UltimaOcorrencia = rng.Cells(i).Address
            Exit Function
        End If
    Next i
    
    UltimaOcorrencia = CVErr(xlErrValue)
End Function

' Função para calcular o valor futuro com juros compostos
Function ValorFuturo(capital As Double, taxa As Double, periodo As Integer) As Double
    ValorFuturo = capital * (1 + taxa) ^ periodo
End Function

' Função para calcular a soma de todos os valores únicos em um intervalo
Function SomaValoresUnicos(rng As Range) As Double
    Dim celula As Range
    Dim valoresUnicos As New Collection
    Dim total As Double
    Dim valor As Variant

    On Error Resume Next
    For Each celula In rng
        valoresUnicos.Add celula.Value, CStr(celula.Value)
    Next celula
    On Error GoTo 0

    For Each valor In valoresUnicos
        total = total + valor
    Next valor

    SomaValoresUnicos = total
End Function
